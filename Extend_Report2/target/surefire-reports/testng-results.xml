<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="48664" started-at="2020-01-03T00:44:09 IST" finished-at="2020-01-03T00:44:57 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="48664" started-at="2020-01-03T00:44:09 IST" finished-at="2020-01-03T00:44:57 IST">
      <class name="testcases.LoginTestActiTime">
        <test-method status="PASS" signature="setUpSuite()[pri:0, instance:testcases.LoginTestActiTime@5d76b067]" name="setUpSuite" is-config="true" duration-ms="844" started-at="2020-01-03T00:44:08 IST" finished-at="2020-01-03T00:44:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSuite -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testcases.LoginTestActiTime@5d76b067]" name="setUp" is-config="true" duration-ms="17113" started-at="2020-01-03T00:44:09 IST" finished-at="2020-01-03T00:44:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="pageLoad()[pri:0, instance:testcases.LoginTestActiTime@5d76b067]" name="pageLoad" is-config="true" duration-ms="406" started-at="2020-01-03T00:44:26 IST" finished-at="2020-01-03T00:44:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageLoad -->
        <test-method status="FAIL" signature="invalidLoginApp()[pri:1, instance:testcases.LoginTestActiTime@5d76b067]" name="invalidLoginApp" duration-ms="11534" started-at="2020-01-03T00:44:26 IST" finished-at="2020-01-03T00:44:38 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME - Login] but found [actiTIME]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME - Login] but found [actiTIME]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.LoginTestActiTime.invalidLoginApp(LoginTestActiTime.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginApp -->
        <test-method status="PASS" signature="takePhoto(org.testng.ITestResult)[pri:0, instance:testcases.LoginTestActiTime@5d76b067]" name="takePhoto" is-config="true" duration-ms="9189" started-at="2020-01-03T00:44:38 IST" finished-at="2020-01-03T00:44:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginApp status=FAILURE method=LoginTestActiTime.invalidLoginApp()[pri:1, instance:testcases.LoginTestActiTime@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takePhoto -->
        <test-method status="PASS" signature="pageLoad()[pri:0, instance:testcases.LoginTestActiTime@5d76b067]" name="pageLoad" is-config="true" duration-ms="40" started-at="2020-01-03T00:44:47 IST" finished-at="2020-01-03T00:44:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageLoad -->
        <test-method status="PASS" signature="validLoginApp()[pri:1, instance:testcases.LoginTestActiTime@5d76b067]" name="validLoginApp" duration-ms="6852" started-at="2020-01-03T00:44:47 IST" finished-at="2020-01-03T00:44:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginApp -->
        <test-method status="PASS" signature="takePhoto(org.testng.ITestResult)[pri:0, instance:testcases.LoginTestActiTime@5d76b067]" name="takePhoto" is-config="true" duration-ms="1489" started-at="2020-01-03T00:44:54 IST" finished-at="2020-01-03T00:44:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginApp status=SUCCESS method=LoginTestActiTime.validLoginApp()[pri:1, instance:testcases.LoginTestActiTime@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takePhoto -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testcases.LoginTestActiTime@5d76b067]" name="tearDown" is-config="true" duration-ms="1651" started-at="2020-01-03T00:44:56 IST" finished-at="2020-01-03T00:44:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.LoginTestActiTime -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
